/*
 * Snippets API
 * Test description
 *
 * OpenAPI spec version: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.limix.awx.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * InstanceHealthCheck
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-25T17:26:39.970+08:00[Asia/Shanghai]")
public class InstanceHealthCheck {
  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("last_health_check")
  private OffsetDateTime lastHealthCheck = null;

  @SerializedName("errors")
  private String errors = null;

  @SerializedName("cpu")
  private String cpu = null;

  @SerializedName("memory")
  private Integer memory = null;

  @SerializedName("cpu_capacity")
  private Integer cpuCapacity = null;

  @SerializedName("mem_capacity")
  private Integer memCapacity = null;

  @SerializedName("capacity")
  private Integer capacity = null;

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

   /**
   * Last time a health check was ran on this instance to refresh cpu, memory, and capacity.
   * @return lastHealthCheck
  **/
  @Schema(description = "Last time a health check was ran on this instance to refresh cpu, memory, and capacity.")
  public OffsetDateTime getLastHealthCheck() {
    return lastHealthCheck;
  }

   /**
   * Any error details from the last health check.
   * @return errors
  **/
  @Schema(description = "Any error details from the last health check.")
  public String getErrors() {
    return errors;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public String getCpu() {
    return cpu;
  }

   /**
   * Total system memory of this instance in bytes.
   * @return memory
  **/
  @Schema(description = "Total system memory of this instance in bytes.")
  public Integer getMemory() {
    return memory;
  }

   /**
   * Get cpuCapacity
   * @return cpuCapacity
  **/
  @Schema(description = "")
  public Integer getCpuCapacity() {
    return cpuCapacity;
  }

   /**
   * Get memCapacity
   * @return memCapacity
  **/
  @Schema(description = "")
  public Integer getMemCapacity() {
    return memCapacity;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @Schema(description = "")
  public Integer getCapacity() {
    return capacity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceHealthCheck instanceHealthCheck = (InstanceHealthCheck) o;
    return Objects.equals(this.uuid, instanceHealthCheck.uuid) &&
        Objects.equals(this.hostname, instanceHealthCheck.hostname) &&
        Objects.equals(this.version, instanceHealthCheck.version) &&
        Objects.equals(this.lastHealthCheck, instanceHealthCheck.lastHealthCheck) &&
        Objects.equals(this.errors, instanceHealthCheck.errors) &&
        Objects.equals(this.cpu, instanceHealthCheck.cpu) &&
        Objects.equals(this.memory, instanceHealthCheck.memory) &&
        Objects.equals(this.cpuCapacity, instanceHealthCheck.cpuCapacity) &&
        Objects.equals(this.memCapacity, instanceHealthCheck.memCapacity) &&
        Objects.equals(this.capacity, instanceHealthCheck.capacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, hostname, version, lastHealthCheck, errors, cpu, memory, cpuCapacity, memCapacity, capacity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceHealthCheck {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    lastHealthCheck: ").append(toIndentedString(lastHealthCheck)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    cpuCapacity: ").append(toIndentedString(cpuCapacity)).append("\n");
    sb.append("    memCapacity: ").append(toIndentedString(memCapacity)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * Snippets API
 * Test description
 *
 * OpenAPI spec version: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.limix.awx.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * WorkflowJobTemplateNodeDetail
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-25T17:26:39.970+08:00[Asia/Shanghai]")
public class WorkflowJobTemplateNodeDetail {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("related")
  private Object related = null;

  @SerializedName("summary_fields")
  private Object summaryFields = null;

  @SerializedName("created")
  private String created = null;

  @SerializedName("modified")
  private String modified = null;

  @SerializedName("extra_data")
  private Object extraData = null;

  @SerializedName("inventory")
  private Integer inventory = null;

  @SerializedName("scm_branch")
  private String scmBranch = null;

  /**
   * Gets or Sets jobType
   */
  @JsonAdapter(JobTypeEnum.Adapter.class)
  public enum JobTypeEnum {
    RUN("run"),
    CHECK("check");

    private String value;

    JobTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static JobTypeEnum fromValue(String input) {
      for (JobTypeEnum b : JobTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<JobTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public JobTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return JobTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("job_type")
  private JobTypeEnum jobType = null;

  @SerializedName("job_tags")
  private String jobTags = null;

  @SerializedName("skip_tags")
  private String skipTags = null;

  @SerializedName("limit")
  private String limit = null;

  @SerializedName("diff_mode")
  private Boolean diffMode = null;

  /**
   * Gets or Sets verbosity
   */
  @JsonAdapter(VerbosityEnum.Adapter.class)
  public enum VerbosityEnum {
    _0("0"),
    _1("1"),
    _2("2"),
    _3("3"),
    _4("4"),
    _5("5");

    private String value;

    VerbosityEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VerbosityEnum fromValue(String input) {
      for (VerbosityEnum b : VerbosityEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VerbosityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VerbosityEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VerbosityEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VerbosityEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("verbosity")
  private VerbosityEnum verbosity = null;

  @SerializedName("workflow_job_template")
  private String workflowJobTemplate = null;

  @SerializedName("unified_job_template")
  private Integer unifiedJobTemplate = null;

  @SerializedName("success_nodes")
  private List<Integer> successNodes = null;

  @SerializedName("failure_nodes")
  private List<Integer> failureNodes = null;

  @SerializedName("always_nodes")
  private List<Integer> alwaysNodes = null;

  @SerializedName("all_parents_must_converge")
  private Boolean allParentsMustConverge = false;

  @SerializedName("identifier")
  private String identifier = "f1e30d14-6795-4941-ac3c-a0ef001ee026";

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public WorkflowJobTemplateNodeDetail related(Object related) {
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @Schema(description = "")
  public Object getRelated() {
    return related;
  }

  public void setRelated(Object related) {
    this.related = related;
  }

  public WorkflowJobTemplateNodeDetail summaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
    return this;
  }

   /**
   * Get summaryFields
   * @return summaryFields
  **/
  @Schema(description = "")
  public Object getSummaryFields() {
    return summaryFields;
  }

  public void setSummaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public String getCreated() {
    return created;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(description = "")
  public String getModified() {
    return modified;
  }

  public WorkflowJobTemplateNodeDetail extraData(Object extraData) {
    this.extraData = extraData;
    return this;
  }

   /**
   * Get extraData
   * @return extraData
  **/
  @Schema(description = "")
  public Object getExtraData() {
    return extraData;
  }

  public void setExtraData(Object extraData) {
    this.extraData = extraData;
  }

  public WorkflowJobTemplateNodeDetail inventory(Integer inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Inventory applied as a prompt, assuming job template prompts for inventory
   * @return inventory
  **/
  @Schema(description = "Inventory applied as a prompt, assuming job template prompts for inventory")
  public Integer getInventory() {
    return inventory;
  }

  public void setInventory(Integer inventory) {
    this.inventory = inventory;
  }

  public WorkflowJobTemplateNodeDetail scmBranch(String scmBranch) {
    this.scmBranch = scmBranch;
    return this;
  }

   /**
   * Get scmBranch
   * @return scmBranch
  **/
  @Schema(description = "")
  public String getScmBranch() {
    return scmBranch;
  }

  public void setScmBranch(String scmBranch) {
    this.scmBranch = scmBranch;
  }

  public WorkflowJobTemplateNodeDetail jobType(JobTypeEnum jobType) {
    this.jobType = jobType;
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @Schema(description = "")
  public JobTypeEnum getJobType() {
    return jobType;
  }

  public void setJobType(JobTypeEnum jobType) {
    this.jobType = jobType;
  }

  public WorkflowJobTemplateNodeDetail jobTags(String jobTags) {
    this.jobTags = jobTags;
    return this;
  }

   /**
   * Get jobTags
   * @return jobTags
  **/
  @Schema(description = "")
  public String getJobTags() {
    return jobTags;
  }

  public void setJobTags(String jobTags) {
    this.jobTags = jobTags;
  }

  public WorkflowJobTemplateNodeDetail skipTags(String skipTags) {
    this.skipTags = skipTags;
    return this;
  }

   /**
   * Get skipTags
   * @return skipTags
  **/
  @Schema(description = "")
  public String getSkipTags() {
    return skipTags;
  }

  public void setSkipTags(String skipTags) {
    this.skipTags = skipTags;
  }

  public WorkflowJobTemplateNodeDetail limit(String limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public String getLimit() {
    return limit;
  }

  public void setLimit(String limit) {
    this.limit = limit;
  }

  public WorkflowJobTemplateNodeDetail diffMode(Boolean diffMode) {
    this.diffMode = diffMode;
    return this;
  }

   /**
   * Get diffMode
   * @return diffMode
  **/
  @Schema(description = "")
  public Boolean isDiffMode() {
    return diffMode;
  }

  public void setDiffMode(Boolean diffMode) {
    this.diffMode = diffMode;
  }

  public WorkflowJobTemplateNodeDetail verbosity(VerbosityEnum verbosity) {
    this.verbosity = verbosity;
    return this;
  }

   /**
   * Get verbosity
   * @return verbosity
  **/
  @Schema(description = "")
  public VerbosityEnum getVerbosity() {
    return verbosity;
  }

  public void setVerbosity(VerbosityEnum verbosity) {
    this.verbosity = verbosity;
  }

  public WorkflowJobTemplateNodeDetail workflowJobTemplate(String workflowJobTemplate) {
    this.workflowJobTemplate = workflowJobTemplate;
    return this;
  }

   /**
   * Get workflowJobTemplate
   * @return workflowJobTemplate
  **/
  @Schema(required = true, description = "")
  public String getWorkflowJobTemplate() {
    return workflowJobTemplate;
  }

  public void setWorkflowJobTemplate(String workflowJobTemplate) {
    this.workflowJobTemplate = workflowJobTemplate;
  }

  public WorkflowJobTemplateNodeDetail unifiedJobTemplate(Integer unifiedJobTemplate) {
    this.unifiedJobTemplate = unifiedJobTemplate;
    return this;
  }

   /**
   * Get unifiedJobTemplate
   * @return unifiedJobTemplate
  **/
  @Schema(description = "")
  public Integer getUnifiedJobTemplate() {
    return unifiedJobTemplate;
  }

  public void setUnifiedJobTemplate(Integer unifiedJobTemplate) {
    this.unifiedJobTemplate = unifiedJobTemplate;
  }

   /**
   * Get successNodes
   * @return successNodes
  **/
  @Schema(description = "")
  public List<Integer> getSuccessNodes() {
    return successNodes;
  }

   /**
   * Get failureNodes
   * @return failureNodes
  **/
  @Schema(description = "")
  public List<Integer> getFailureNodes() {
    return failureNodes;
  }

   /**
   * Get alwaysNodes
   * @return alwaysNodes
  **/
  @Schema(description = "")
  public List<Integer> getAlwaysNodes() {
    return alwaysNodes;
  }

  public WorkflowJobTemplateNodeDetail allParentsMustConverge(Boolean allParentsMustConverge) {
    this.allParentsMustConverge = allParentsMustConverge;
    return this;
  }

   /**
   * If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node
   * @return allParentsMustConverge
  **/
  @Schema(description = "If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node")
  public Boolean isAllParentsMustConverge() {
    return allParentsMustConverge;
  }

  public void setAllParentsMustConverge(Boolean allParentsMustConverge) {
    this.allParentsMustConverge = allParentsMustConverge;
  }

  public WorkflowJobTemplateNodeDetail identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * An identifier for this node that is unique within its workflow. It is copied to workflow job nodes corresponding to this node.
   * @return identifier
  **/
  @Schema(description = "An identifier for this node that is unique within its workflow. It is copied to workflow job nodes corresponding to this node.")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowJobTemplateNodeDetail workflowJobTemplateNodeDetail = (WorkflowJobTemplateNodeDetail) o;
    return Objects.equals(this.id, workflowJobTemplateNodeDetail.id) &&
        Objects.equals(this.type, workflowJobTemplateNodeDetail.type) &&
        Objects.equals(this.url, workflowJobTemplateNodeDetail.url) &&
        Objects.equals(this.related, workflowJobTemplateNodeDetail.related) &&
        Objects.equals(this.summaryFields, workflowJobTemplateNodeDetail.summaryFields) &&
        Objects.equals(this.created, workflowJobTemplateNodeDetail.created) &&
        Objects.equals(this.modified, workflowJobTemplateNodeDetail.modified) &&
        Objects.equals(this.extraData, workflowJobTemplateNodeDetail.extraData) &&
        Objects.equals(this.inventory, workflowJobTemplateNodeDetail.inventory) &&
        Objects.equals(this.scmBranch, workflowJobTemplateNodeDetail.scmBranch) &&
        Objects.equals(this.jobType, workflowJobTemplateNodeDetail.jobType) &&
        Objects.equals(this.jobTags, workflowJobTemplateNodeDetail.jobTags) &&
        Objects.equals(this.skipTags, workflowJobTemplateNodeDetail.skipTags) &&
        Objects.equals(this.limit, workflowJobTemplateNodeDetail.limit) &&
        Objects.equals(this.diffMode, workflowJobTemplateNodeDetail.diffMode) &&
        Objects.equals(this.verbosity, workflowJobTemplateNodeDetail.verbosity) &&
        Objects.equals(this.workflowJobTemplate, workflowJobTemplateNodeDetail.workflowJobTemplate) &&
        Objects.equals(this.unifiedJobTemplate, workflowJobTemplateNodeDetail.unifiedJobTemplate) &&
        Objects.equals(this.successNodes, workflowJobTemplateNodeDetail.successNodes) &&
        Objects.equals(this.failureNodes, workflowJobTemplateNodeDetail.failureNodes) &&
        Objects.equals(this.alwaysNodes, workflowJobTemplateNodeDetail.alwaysNodes) &&
        Objects.equals(this.allParentsMustConverge, workflowJobTemplateNodeDetail.allParentsMustConverge) &&
        Objects.equals(this.identifier, workflowJobTemplateNodeDetail.identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, url, related, summaryFields, created, modified, extraData, inventory, scmBranch, jobType, jobTags, skipTags, limit, diffMode, verbosity, workflowJobTemplate, unifiedJobTemplate, successNodes, failureNodes, alwaysNodes, allParentsMustConverge, identifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowJobTemplateNodeDetail {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    summaryFields: ").append(toIndentedString(summaryFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    scmBranch: ").append(toIndentedString(scmBranch)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    jobTags: ").append(toIndentedString(jobTags)).append("\n");
    sb.append("    skipTags: ").append(toIndentedString(skipTags)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    diffMode: ").append(toIndentedString(diffMode)).append("\n");
    sb.append("    verbosity: ").append(toIndentedString(verbosity)).append("\n");
    sb.append("    workflowJobTemplate: ").append(toIndentedString(workflowJobTemplate)).append("\n");
    sb.append("    unifiedJobTemplate: ").append(toIndentedString(unifiedJobTemplate)).append("\n");
    sb.append("    successNodes: ").append(toIndentedString(successNodes)).append("\n");
    sb.append("    failureNodes: ").append(toIndentedString(failureNodes)).append("\n");
    sb.append("    alwaysNodes: ").append(toIndentedString(alwaysNodes)).append("\n");
    sb.append("    allParentsMustConverge: ").append(toIndentedString(allParentsMustConverge)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

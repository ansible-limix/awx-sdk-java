/*
 * Snippets API
 * Test description
 *
 * OpenAPI spec version: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.limix.awx.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InstanceGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-25T17:26:39.970+08:00[Asia/Shanghai]")
public class InstanceGroup {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("related")
  private Object related = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("created")
  private String created = null;

  @SerializedName("modified")
  private String modified = null;

  @SerializedName("capacity")
  private String capacity = null;

  @SerializedName("committed_capacity")
  private String committedCapacity = null;

  @SerializedName("consumed_capacity")
  private String consumedCapacity = null;

  @SerializedName("percent_capacity_remaining")
  private String percentCapacityRemaining = null;

  @SerializedName("jobs_running")
  private Integer jobsRunning = null;

  @SerializedName("jobs_total")
  private Integer jobsTotal = null;

  @SerializedName("instances")
  private String instances = null;

  @SerializedName("is_container_group")
  private Boolean isContainerGroup = null;

  @SerializedName("credential")
  private Integer credential = null;

  @SerializedName("policy_instance_percentage")
  private Integer policyInstancePercentage = null;

  @SerializedName("policy_instance_minimum")
  private Integer policyInstanceMinimum = null;

  @SerializedName("policy_instance_list")
  private List<String> policyInstanceList = null;

  @SerializedName("pod_spec_override")
  private String podSpecOverride = "";

  @SerializedName("summary_fields")
  private Object summaryFields = null;

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public InstanceGroup related(Object related) {
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @Schema(description = "")
  public Object getRelated() {
    return related;
  }

  public void setRelated(Object related) {
    this.related = related;
  }

  public InstanceGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public String getCreated() {
    return created;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(description = "")
  public String getModified() {
    return modified;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @Schema(description = "")
  public String getCapacity() {
    return capacity;
  }

   /**
   * Get committedCapacity
   * @return committedCapacity
  **/
  @Schema(description = "")
  public String getCommittedCapacity() {
    return committedCapacity;
  }

   /**
   * Get consumedCapacity
   * @return consumedCapacity
  **/
  @Schema(description = "")
  public String getConsumedCapacity() {
    return consumedCapacity;
  }

   /**
   * Get percentCapacityRemaining
   * @return percentCapacityRemaining
  **/
  @Schema(description = "")
  public String getPercentCapacityRemaining() {
    return percentCapacityRemaining;
  }

   /**
   * Count of jobs in the running or waiting state that are targeted for this instance group
   * @return jobsRunning
  **/
  @Schema(description = "Count of jobs in the running or waiting state that are targeted for this instance group")
  public Integer getJobsRunning() {
    return jobsRunning;
  }

   /**
   * Count of all jobs that target this instance group
   * @return jobsTotal
  **/
  @Schema(description = "Count of all jobs that target this instance group")
  public Integer getJobsTotal() {
    return jobsTotal;
  }

   /**
   * Get instances
   * @return instances
  **/
  @Schema(description = "")
  public String getInstances() {
    return instances;
  }

  public InstanceGroup isContainerGroup(Boolean isContainerGroup) {
    this.isContainerGroup = isContainerGroup;
    return this;
  }

   /**
   * Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster.
   * @return isContainerGroup
  **/
  @Schema(description = "Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster.")
  public Boolean isIsContainerGroup() {
    return isContainerGroup;
  }

  public void setIsContainerGroup(Boolean isContainerGroup) {
    this.isContainerGroup = isContainerGroup;
  }

  public InstanceGroup credential(Integer credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @Schema(description = "")
  public Integer getCredential() {
    return credential;
  }

  public void setCredential(Integer credential) {
    this.credential = credential;
  }

  public InstanceGroup policyInstancePercentage(Integer policyInstancePercentage) {
    this.policyInstancePercentage = policyInstancePercentage;
    return this;
  }

   /**
   * Minimum percentage of all instances that will be automatically assigned to this group when new instances come online.
   * minimum: 0
   * maximum: 100
   * @return policyInstancePercentage
  **/
  @Schema(description = "Minimum percentage of all instances that will be automatically assigned to this group when new instances come online.")
  public Integer getPolicyInstancePercentage() {
    return policyInstancePercentage;
  }

  public void setPolicyInstancePercentage(Integer policyInstancePercentage) {
    this.policyInstancePercentage = policyInstancePercentage;
  }

  public InstanceGroup policyInstanceMinimum(Integer policyInstanceMinimum) {
    this.policyInstanceMinimum = policyInstanceMinimum;
    return this;
  }

   /**
   * Static minimum number of Instances that will be automatically assign to this group when new instances come online.
   * minimum: 0
   * @return policyInstanceMinimum
  **/
  @Schema(description = "Static minimum number of Instances that will be automatically assign to this group when new instances come online.")
  public Integer getPolicyInstanceMinimum() {
    return policyInstanceMinimum;
  }

  public void setPolicyInstanceMinimum(Integer policyInstanceMinimum) {
    this.policyInstanceMinimum = policyInstanceMinimum;
  }

  public InstanceGroup policyInstanceList(List<String> policyInstanceList) {
    this.policyInstanceList = policyInstanceList;
    return this;
  }

  public InstanceGroup addPolicyInstanceListItem(String policyInstanceListItem) {
    if (this.policyInstanceList == null) {
      this.policyInstanceList = new ArrayList<String>();
    }
    this.policyInstanceList.add(policyInstanceListItem);
    return this;
  }

   /**
   * List of exact-match Instances that will be assigned to this group
   * @return policyInstanceList
  **/
  @Schema(description = "List of exact-match Instances that will be assigned to this group")
  public List<String> getPolicyInstanceList() {
    return policyInstanceList;
  }

  public void setPolicyInstanceList(List<String> policyInstanceList) {
    this.policyInstanceList = policyInstanceList;
  }

  public InstanceGroup podSpecOverride(String podSpecOverride) {
    this.podSpecOverride = podSpecOverride;
    return this;
  }

   /**
   * Get podSpecOverride
   * @return podSpecOverride
  **/
  @Schema(description = "")
  public String getPodSpecOverride() {
    return podSpecOverride;
  }

  public void setPodSpecOverride(String podSpecOverride) {
    this.podSpecOverride = podSpecOverride;
  }

  public InstanceGroup summaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
    return this;
  }

   /**
   * Get summaryFields
   * @return summaryFields
  **/
  @Schema(description = "")
  public Object getSummaryFields() {
    return summaryFields;
  }

  public void setSummaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceGroup instanceGroup = (InstanceGroup) o;
    return Objects.equals(this.id, instanceGroup.id) &&
        Objects.equals(this.type, instanceGroup.type) &&
        Objects.equals(this.url, instanceGroup.url) &&
        Objects.equals(this.related, instanceGroup.related) &&
        Objects.equals(this.name, instanceGroup.name) &&
        Objects.equals(this.created, instanceGroup.created) &&
        Objects.equals(this.modified, instanceGroup.modified) &&
        Objects.equals(this.capacity, instanceGroup.capacity) &&
        Objects.equals(this.committedCapacity, instanceGroup.committedCapacity) &&
        Objects.equals(this.consumedCapacity, instanceGroup.consumedCapacity) &&
        Objects.equals(this.percentCapacityRemaining, instanceGroup.percentCapacityRemaining) &&
        Objects.equals(this.jobsRunning, instanceGroup.jobsRunning) &&
        Objects.equals(this.jobsTotal, instanceGroup.jobsTotal) &&
        Objects.equals(this.instances, instanceGroup.instances) &&
        Objects.equals(this.isContainerGroup, instanceGroup.isContainerGroup) &&
        Objects.equals(this.credential, instanceGroup.credential) &&
        Objects.equals(this.policyInstancePercentage, instanceGroup.policyInstancePercentage) &&
        Objects.equals(this.policyInstanceMinimum, instanceGroup.policyInstanceMinimum) &&
        Objects.equals(this.policyInstanceList, instanceGroup.policyInstanceList) &&
        Objects.equals(this.podSpecOverride, instanceGroup.podSpecOverride) &&
        Objects.equals(this.summaryFields, instanceGroup.summaryFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, url, related, name, created, modified, capacity, committedCapacity, consumedCapacity, percentCapacityRemaining, jobsRunning, jobsTotal, instances, isContainerGroup, credential, policyInstancePercentage, policyInstanceMinimum, policyInstanceList, podSpecOverride, summaryFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceGroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    committedCapacity: ").append(toIndentedString(committedCapacity)).append("\n");
    sb.append("    consumedCapacity: ").append(toIndentedString(consumedCapacity)).append("\n");
    sb.append("    percentCapacityRemaining: ").append(toIndentedString(percentCapacityRemaining)).append("\n");
    sb.append("    jobsRunning: ").append(toIndentedString(jobsRunning)).append("\n");
    sb.append("    jobsTotal: ").append(toIndentedString(jobsTotal)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    isContainerGroup: ").append(toIndentedString(isContainerGroup)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    policyInstancePercentage: ").append(toIndentedString(policyInstancePercentage)).append("\n");
    sb.append("    policyInstanceMinimum: ").append(toIndentedString(policyInstanceMinimum)).append("\n");
    sb.append("    policyInstanceList: ").append(toIndentedString(policyInstanceList)).append("\n");
    sb.append("    podSpecOverride: ").append(toIndentedString(podSpecOverride)).append("\n");
    sb.append("    summaryFields: ").append(toIndentedString(summaryFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

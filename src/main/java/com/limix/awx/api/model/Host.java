/*
 * Snippets API
 * Test description
 *
 * OpenAPI spec version: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.limix.awx.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Host
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-25T17:26:39.970+08:00[Asia/Shanghai]")
public class Host {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("related")
  private Object related = null;

  @SerializedName("summary_fields")
  private Object summaryFields = null;

  @SerializedName("created")
  private String created = null;

  @SerializedName("modified")
  private String modified = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = "";

  @SerializedName("inventory")
  private Integer inventory = null;

  @SerializedName("enabled")
  private Boolean enabled = true;

  @SerializedName("instance_id")
  private String instanceId = "";

  @SerializedName("variables")
  private String variables = "";

  @SerializedName("has_active_failures")
  private String hasActiveFailures = null;

  @SerializedName("has_inventory_sources")
  private String hasInventorySources = null;

  @SerializedName("last_job")
  private String lastJob = null;

  @SerializedName("last_job_host_summary")
  private Integer lastJobHostSummary = null;

  @SerializedName("ansible_facts_modified")
  private OffsetDateTime ansibleFactsModified = null;

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public Host related(Object related) {
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @Schema(description = "")
  public Object getRelated() {
    return related;
  }

  public void setRelated(Object related) {
    this.related = related;
  }

  public Host summaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
    return this;
  }

   /**
   * Get summaryFields
   * @return summaryFields
  **/
  @Schema(description = "")
  public Object getSummaryFields() {
    return summaryFields;
  }

  public void setSummaryFields(Object summaryFields) {
    this.summaryFields = summaryFields;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public String getCreated() {
    return created;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(description = "")
  public String getModified() {
    return modified;
  }

  public Host name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Host description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Host inventory(Integer inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @Schema(required = true, description = "")
  public Integer getInventory() {
    return inventory;
  }

  public void setInventory(Integer inventory) {
    this.inventory = inventory;
  }

  public Host enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Is this host online and available for running jobs?
   * @return enabled
  **/
  @Schema(description = "Is this host online and available for running jobs?")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Host instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * The value used by the remote inventory source to uniquely identify the host
   * @return instanceId
  **/
  @Schema(description = "The value used by the remote inventory source to uniquely identify the host")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public Host variables(String variables) {
    this.variables = variables;
    return this;
  }

   /**
   * Host variables in JSON or YAML format.
   * @return variables
  **/
  @Schema(description = "Host variables in JSON or YAML format.")
  public String getVariables() {
    return variables;
  }

  public void setVariables(String variables) {
    this.variables = variables;
  }

   /**
   * Get hasActiveFailures
   * @return hasActiveFailures
  **/
  @Schema(description = "")
  public String getHasActiveFailures() {
    return hasActiveFailures;
  }

   /**
   * Get hasInventorySources
   * @return hasInventorySources
  **/
  @Schema(description = "")
  public String getHasInventorySources() {
    return hasInventorySources;
  }

   /**
   * Get lastJob
   * @return lastJob
  **/
  @Schema(description = "")
  public String getLastJob() {
    return lastJob;
  }

   /**
   * Get lastJobHostSummary
   * @return lastJobHostSummary
  **/
  @Schema(description = "")
  public Integer getLastJobHostSummary() {
    return lastJobHostSummary;
  }

   /**
   * The date and time ansible_facts was last modified.
   * @return ansibleFactsModified
  **/
  @Schema(description = "The date and time ansible_facts was last modified.")
  public OffsetDateTime getAnsibleFactsModified() {
    return ansibleFactsModified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Host host = (Host) o;
    return Objects.equals(this.id, host.id) &&
        Objects.equals(this.type, host.type) &&
        Objects.equals(this.url, host.url) &&
        Objects.equals(this.related, host.related) &&
        Objects.equals(this.summaryFields, host.summaryFields) &&
        Objects.equals(this.created, host.created) &&
        Objects.equals(this.modified, host.modified) &&
        Objects.equals(this.name, host.name) &&
        Objects.equals(this.description, host.description) &&
        Objects.equals(this.inventory, host.inventory) &&
        Objects.equals(this.enabled, host.enabled) &&
        Objects.equals(this.instanceId, host.instanceId) &&
        Objects.equals(this.variables, host.variables) &&
        Objects.equals(this.hasActiveFailures, host.hasActiveFailures) &&
        Objects.equals(this.hasInventorySources, host.hasInventorySources) &&
        Objects.equals(this.lastJob, host.lastJob) &&
        Objects.equals(this.lastJobHostSummary, host.lastJobHostSummary) &&
        Objects.equals(this.ansibleFactsModified, host.ansibleFactsModified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, url, related, summaryFields, created, modified, name, description, inventory, enabled, instanceId, variables, hasActiveFailures, hasInventorySources, lastJob, lastJobHostSummary, ansibleFactsModified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Host {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    summaryFields: ").append(toIndentedString(summaryFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    hasActiveFailures: ").append(toIndentedString(hasActiveFailures)).append("\n");
    sb.append("    hasInventorySources: ").append(toIndentedString(hasInventorySources)).append("\n");
    sb.append("    lastJob: ").append(toIndentedString(lastJob)).append("\n");
    sb.append("    lastJobHostSummary: ").append(toIndentedString(lastJobHostSummary)).append("\n");
    sb.append("    ansibleFactsModified: ").append(toIndentedString(ansibleFactsModified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
